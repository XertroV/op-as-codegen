#if UNIT_TEST
namespace Test_PlayerSplitsInfo {
  /* Test // Mixin: Common Testing */
  void Tests_RegisterAll_PlayerSplitsInfo_CommonTesting() {
    RegisterUnitTest('UnitTest_Common_Nop', UnitTest_Common_Nop);
  }
  
  bool runAsync(CoroutineFunc@ func) {
    startnew(func);
    return true;
  }
  
  void assert(bool condition, const string &in msg) {
    if (!condition) {
      throw('Assert failed: ' + msg);
    }
  }
  
  void debug_trace(const string &in msg) {
    trace(msg);
  }
  
  int countFileLines(const string &in path) {
    IO::File f(path, IO::FileMode::Read);
    string contents = f.ReadToEnd();
    f.Close();
    return contents.Split('\n').Length - (contents.EndsWith('\n') ? 1 : 0);
  }
  
  void UnitTest_Common_Nop() {
  }
  
  bool unitTestResults_PlayerSplitsInfo_CommonTesting = runAsync(Tests_RegisterAll_PlayerSplitsInfo_CommonTesting);
  
  /* Test // Mixin: ToFrom JSON Object */
  void Tests_RegisterAll_PlayerSplitsInfo_ToFromJSONObject() {
    RegisterUnitTest('UnitTest_ToJsonFromJson_PlayerSplitsInfo', UnitTest_ToJsonFromJson_PlayerSplitsInfo);
  }
  
  bool Test_ToJsonFromJson_Check(const string &in Name, const string &in MapName, const uint[] &in PBTimes, const uint[] &in PBSplits, const uint[] &in BestSplits, uint SumOfBest, const uint[] &in NextBestTimes1, const uint[] &in NextBestTimes2, const uint[] &in NextBestTimes3, const uint[] &in NextBestTimes4) {
    PlayerSplitsInfo@ tmp = PlayerSplitsInfo(Name, MapName, PBTimes, PBSplits, BestSplits, SumOfBest, NextBestTimes1, NextBestTimes2, NextBestTimes3, NextBestTimes4);
    assert(tmp == PlayerSplitsInfo(tmp.ToJson()), 'ToJsonFromJson fail: ' + Json::Write(tmp.ToJson()));
    return true;
  }
  
  void UnitTest_ToJsonFromJson_PlayerSplitsInfo() {
    Test_ToJsonFromJson_Check("", "ꠂ쮰", {690814, 712811}, {883496, 86104, 191439}, {587832, 884255, 244688, 263483}, 695394, {403118, 294609}, {755012}, {331925, 141875, 292599}, {908450, 289542});
    Test_ToJsonFromJson_Check("䂟", "ᤫ簔�좕큇玪", {957341}, {62436, 316905, 232649, 272929}, {762937, 509010, 199466, 744556}, 553541, {391029}, {962581, 774112, 842264, 67966}, {882972, 314391, 914935}, {8357, 450229, 467498, 748773});
    Test_ToJsonFromJson_Check("䦋쁗缧ⱊﱻ狀ꆟ", "", {415853, 126516, 825923, 906041}, {236301, 158796, 291599}, {549667}, 809822, {814563, 192429, 562436}, {650767, 68320, 115425, 471876}, {474515, 198407, 275663, 782152}, {925873, 360170, 70765});
    Test_ToJsonFromJson_Check("⁥츟惦鷰ᖺ䖛", "뢵䗕", {419346}, {781176}, {417442, 64291, 304545, 899539}, 351797, {239551, 950521, 821999, 541007}, {757477, 442122}, {673225, 862632, 108410}, {123025});
    Test_ToJsonFromJson_Check("", "坖澂ꉃ뒅Ὄ㜣뗃㷦", {263794, 178195}, {698297, 48539}, {228006, 17362}, 468916, {454929, 133268, 703562, 959377}, {418968, 936398, 714151}, {646581}, {601530, 58731, 904752});
    Test_ToJsonFromJson_Check("ᴝ삱鄎吐�Ͼ斐임", "招곢贕没", {817776, 881761, 204841, 227340}, {188934, 7765, 560953, 767183}, {201380, 23152, 8576, 235494}, 603151, {112159, 236918, 129795, 672482}, {123726, 703353, 954857, 35974}, {175152, 896297, 949831}, {951763, 798815});
    Test_ToJsonFromJson_Check("", "䮪", {871194, 573011, 551413, 148290}, {743344, 91151}, {929747, 569609, 636085}, 692390, {226201, 734280}, {224878, 33014, 216486}, {111365}, {497081, 328084});
    Test_ToJsonFromJson_Check("", "ꯥ끁롣௑", {49476, 876283, 508457, 771523}, {934467, 831374}, {43093, 160914, 662348}, 618140, {275567, 497867, 600882}, {548088, 699484, 41873}, {997572, 883939}, {245672, 390405, 958172});
    Test_ToJsonFromJson_Check("ᒢ湾", "৹", {799482, 66059}, {512066, 235459, 929340, 615355}, {568242, 120250}, 791291, {60272, 840907}, {293637}, {78744, 421056}, {859204});
    Test_ToJsonFromJson_Check("첕풠躹伲킬", "�", {489062, 195672, 33888, 108577}, {382427, 974359, 7076}, {13752, 260294, 64905, 448613}, 693335, {507055, 947821, 477731, 291881}, {681867, 403766}, {307430, 182356, 582294, 898974}, {804780});
    Test_ToJsonFromJson_Check("᥌⇝䱓䎸帍곔", "釄", {726580, 466997, 228067, 826832}, {900364}, {846903, 241249, 887527, 10972}, 199973, {812903, 379745}, {542289, 685947, 958812, 380994}, {825672, 152001, 822200}, {218910});
    Test_ToJsonFromJson_Check("值", "皬毸圌蒵⢢⣳燘", {116611}, {558668, 61932, 482244}, {26762, 462683, 355681}, 578239, {497508, 590010}, {901422, 156482, 665571, 892962}, {476766, 506709, 749041}, {192767});
    Test_ToJsonFromJson_Check("蜰ộ念ꓩ", "⊐檢䩬媴白矷孃뷌", {42894, 19596, 905431, 363103}, {472287, 583411}, {347672, 346296}, 700997, {990125, 322790, 890783, 302662}, {749022, 251574, 506613, 759884}, {45787}, {38087, 712655});
    Test_ToJsonFromJson_Check("㡪ῥ舙鬱訁至", "⥖㈠୅샛Ꝩ", {314379}, {259833, 503046}, {852641}, 296220, {194770}, {49348, 172674}, {621454}, {821203, 769500});
    Test_ToJsonFromJson_Check("笘", "뼘㽗ⷻ찄", {324522, 107194, 793101, 123307}, {692481}, {603639}, 884330, {227185, 176037}, {908975, 715973, 39228, 337199}, {978188, 163050, 515698}, {696880, 609576, 321923, 759835});
    Test_ToJsonFromJson_Check("殱壘䅣�", "㲠嘁첱", {767208, 814349}, {155432, 398659, 333402, 6459}, {676304, 98021, 100569}, 338922, {255071, 493846}, {242717}, {609876}, {205558, 685120});
    Test_ToJsonFromJson_Check("", "妬눌鏩틽㼾켶⾤ᐺ", {21776}, {398554, 913604, 729860, 183673}, {692501, 455245}, 707603, {796797, 875074, 434488, 15019}, {310510}, {164551}, {860289, 898206});
    Test_ToJsonFromJson_Check("惴礰튫탱ⶽន焦", "ﾌ錁鳲�怢팃쪶", {130869, 482143}, {358284, 182649, 77310}, {805490, 311470, 607971}, 885948, {717439, 17883, 309855, 952526}, {83873, 248162, 823493, 346280}, {32450, 437178}, {582937, 581720});
    Test_ToJsonFromJson_Check("恎ȟ㰧໾趀㍟㤒居", "䜷ꄀ罫", {7995, 975179, 32282}, {645752, 264554}, {962674}, 954905, {149252, 68906}, {443206, 698795, 547939, 408858}, {315557}, {313857, 840861, 134858, 454139});
    Test_ToJsonFromJson_Check("檃㘙搅쥢�턬䵕廌邏協", "䩧톿ޜＶ", {358371, 732290, 429305}, {711783, 547046}, {157199, 668195}, 37056, {875365, 216424, 359040, 6063}, {587058}, {272392, 846347, 524090, 348238}, {132636, 228408, 550400});
    Test_ToJsonFromJson_Check("⫼䇤屴콙诘䒂", "ᄯ", {736281, 760094, 287970}, {410454, 741213, 600250, 49936}, {125761, 995393, 121045}, 434254, {651681, 369631, 402655, 619631}, {15795}, {886948}, {292527, 834162, 7833, 855091});
    Test_ToJsonFromJson_Check("果", "", {28880}, {865539, 760178, 138067}, {398893}, 188284, {976713, 209077, 449978, 507252}, {36138, 8874, 776333, 157929}, {960666, 905071}, {390837, 913860, 927132, 20018});
    Test_ToJsonFromJson_Check("馤", "뾯抃䱈೵谬", {}, {926335, 48005}, {909769, 756055, 888133}, 94877, {606587, 282719}, {874064, 459217, 658874}, {134123}, {138574});
    Test_ToJsonFromJson_Check("태�별Ἰ絽ㄆ�ྸ", "훟�ද퐅쾾䂆䇩馴", {761946}, {343513, 870024, 727601, 254905}, {833935, 589811}, 343244, {262710, 172377, 726475}, {451753}, {143587, 420887, 533219}, {863382});
    Test_ToJsonFromJson_Check("索퐔㿥ᢧ맦䎀᝹쭗緞", "㺢ḡ핝쯜䨶堂ú锖", {794966, 608199, 602825}, {351956, 138003}, {290573, 225325, 545581, 244741}, 952959, {393537, 927977, 44534}, {767444}, {393864, 256514, 944209, 789280}, {201026, 967554, 780586});
    Test_ToJsonFromJson_Check("ⵐ", "ᓴ猦⩋ᗐ댯", {956891, 628314, 169300}, {154834, 601213}, {481002, 291812, 649165}, 204818, {996103, 395219, 529338}, {533747}, {236985, 728159, 343354}, {374434, 258985, 629058, 885090});
    Test_ToJsonFromJson_Check("㸤⇢㫢긩保넍颓ヂ�", "舼驸ﰹ", {193559, 177927, 563790}, {}, {929812, 717300, 333110}, 575514, {301478}, {162138, 145929, 815094}, {310009, 982115}, {860234});
    Test_ToJsonFromJson_Check("瑢탫콫Ⴗ鲧", "ꖹ臨넣", {115342}, {761491, 644419, 955505}, {783504, 507599, 351989, 331757}, 553517, {534883, 873915}, {278526}, {660204, 805981, 181292, 722542}, {365427});
    Test_ToJsonFromJson_Check("滯", "旱嗙鸙뺦疂纑긶嘍唾", {663313, 126523, 463306, 740264}, {523522, 358194, 890562}, {693592, 496723, 620377, 143561}, 780123, {975858, 622588, 69762, 384810}, {288425, 668434, 571537, 807355}, {802124, 9553, 789349, 345656}, {201513, 486925, 673062, 389563});
    Test_ToJsonFromJson_Check("嗽鬒挿⎜䬇心", "ᬏ뮩줙㠉ៅ倖催", {315516}, {45065, 130085, 898056}, {698485, 589215}, 357292, {829896}, {785572, 337131}, {559546, 154392, 96867}, {733367});
    Test_ToJsonFromJson_Check("恕೹⊅簬蘲擘", "", {904967}, {227706}, {592558}, 874187, {848468}, {781189, 399998}, {490654}, {703569, 891202, 302305});
    Test_ToJsonFromJson_Check("濲縈뭨琏⭁", "觇ﵓ䋯섺㟷댜", {152271, 444044}, {896362}, {912787, 417675, 723040}, 346562, {4033, 339933, 991994}, {185626, 985010, 911767, 151738}, {705632, 983380}, {275368, 181073, 432303, 136082});
    Test_ToJsonFromJson_Check("뻌५�啵⸁煿忲", "櫤툈ᩅỺஒ", {756651}, {414015, 825117}, {812444, 196318}, 926135, {578500}, {77773}, {631761}, {377239});
    Test_ToJsonFromJson_Check("᝟��", "ｊ㸦צ袍਍", {783296, 775899, 792171, 285382}, {797416}, {939964, 226312, 455742}, 15544, {735596, 248168, 466519}, {904844, 961755, 74689}, {972627, 766280, 783888}, {927098, 640058, 761357});
    Test_ToJsonFromJson_Check("췲ꢗ璍깶ﱻ뿱춟쨗퍑짏", "埏⡓桾ޜ", {744797, 585259, 987751, 434691}, {582338, 810727, 677329, 502276}, {264128, 36196, 945623}, 609529, {696747}, {175854}, {188563}, {876806, 818363, 586140, 515188});
    Test_ToJsonFromJson_Check("", "譋햙Ⅱ㞩ꚗ옴鬸", {367173}, {415927, 315691, 779298}, {56294}, 683680, {476230, 936154, 814866, 146610}, {}, {772407}, {757844, 818581});
    Test_ToJsonFromJson_Check("牥諹淩Ṟ阯�䅏", "좻", {347859, 480083, 771007, 65919}, {129685, 658389, 57403, 148563}, {871882, 84280, 725799, 220554}, 66650, {50093}, {47617}, {268176, 847397, 472293}, {168559, 62675});
    Test_ToJsonFromJson_Check("鿽꥟쁥", "맱嶣䶂쩪靚甴四�ૐ쐓", {61168, 210283, 550368}, {542955, 314817, 763851}, {248572, 779215, 505062}, 841450, {586872}, {885799, 508403, 334345}, {222696, 856256, 146032, 933446}, {142114, 813784});
    Test_ToJsonFromJson_Check("乣溵䭼쫓致湧癁", "ㅗ䐍㣯", {340637, 787165}, {119875, 763845, 796551, 286278}, {841997, 184579, 714194}, 139538, {733143, 885713, 295798}, {200770, 903037}, {376002, 802727, 163963}, {504155});
    Test_ToJsonFromJson_Check("諶", "亪姖㝲", {378197, 806988, 138184, 900361}, {918432, 835766, 867166, 990455}, {362969, 315603}, 232454, {506178}, {275455, 199369, 396872, 776679}, {}, {387141, 570253, 376020});
    Test_ToJsonFromJson_Check("雳ⱅ록톇伙", "ꁇ꩝", {578707, 417219}, {549499, 103182, 288488}, {865499, 370015, 277156, 804408}, 612808, {794214}, {531747, 924485}, {885965}, {323170, 61306, 972857});
    Test_ToJsonFromJson_Check("ꃖ섷曙呸萻", "䷯፯", {692423}, {460309}, {212942}, 325689, {965049, 967117, 705783, 897481}, {260684}, {623219, 979943}, {835832, 7625});
  }
  
  bool unitTestResults_PlayerSplitsInfo_ToFromJSONObject = runAsync(Tests_RegisterAll_PlayerSplitsInfo_ToFromJSONObject);
  
  /* Test // Mixin: Getters */
  void Tests_RegisterAll_PlayerSplitsInfo_Getters() {
    RegisterUnitTest('UnitTest_PlayerSplitsInfo_Getters', UnitTest_PlayerSplitsInfo_Getters);
  }
  
  bool Test_CheckProps_PlayerSplitsInfo(const string &in Name, const string &in MapName, const uint[] &in PBTimes, const uint[] &in PBSplits, const uint[] &in BestSplits, uint SumOfBest, const uint[] &in NextBestTimes1, const uint[] &in NextBestTimes2, const uint[] &in NextBestTimes3, const uint[] &in NextBestTimes4) {
    PlayerSplitsInfo@ tmp = PlayerSplitsInfo(Name, MapName, PBTimes, PBSplits, BestSplits, SumOfBest, NextBestTimes1, NextBestTimes2, NextBestTimes3, NextBestTimes4);
    assert(Name == tmp.Name, 'field Name with value `' + Name + '`');
    assert(MapName == tmp.MapName, 'field MapName with value `' + MapName + '`');
    assert(PBTimes == tmp.PBTimes, 'field PBTimes');
    assert(PBSplits == tmp.PBSplits, 'field PBSplits');
    assert(BestSplits == tmp.BestSplits, 'field BestSplits');
    assert(SumOfBest == tmp.SumOfBest, 'field SumOfBest with value `' + SumOfBest + '`');
    assert(NextBestTimes1 == tmp.NextBestTimes1, 'field NextBestTimes1');
    assert(NextBestTimes2 == tmp.NextBestTimes2, 'field NextBestTimes2');
    assert(NextBestTimes3 == tmp.NextBestTimes3, 'field NextBestTimes3');
    assert(NextBestTimes4 == tmp.NextBestTimes4, 'field NextBestTimes4');
    return true;
  }
  
  void UnitTest_PlayerSplitsInfo_Getters() {
    Test_CheckProps_PlayerSplitsInfo("�￿躮䮠馩�", "㧖⢢羋⽪㎜৏렊", {920219, 397204, 551850, 275550}, {402441, 409104, 14178}, {931445, 87722}, 242516, {241778, 704714, 54851}, {380290, 845199, 990278}, {55244, 36088}, {644216, 765075, 290772});
    Test_CheckProps_PlayerSplitsInfo("݋", "鿐繗", {715346, 321608, 986078}, {58059, 613352, 686837, 763812}, {425498, 438676, 853156, 149817}, 985047, {813021, 575746, 551289}, {49582, 719653}, {443180, 842424}, {837902, 502172, 999977, 736302});
    Test_CheckProps_PlayerSplitsInfo("儞祹㚏풓鏓윃", "揘", {583000}, {544625, 984066}, {838871, 998389}, 271115, {985736, 458500, 191510, 791515}, {585173, 380281}, {509010}, {553221});
    Test_CheckProps_PlayerSplitsInfo("뵋榟蚂㢲蘆鞆", "瘃빻桑", {363342}, {}, {264138, 585012}, 345680, {397387, 32083, 951829}, {208375, 378630, 96323, 816997}, {715112, 207480, 785867}, {153273, 469838});
    Test_CheckProps_PlayerSplitsInfo("륦홰떌䱇盰", "ꒉ㳀䈾뙱", {296569, 462406, 902587}, {705388}, {725799, 251911}, 706228, {494491, 275775}, {48810, 527405, 591760}, {330938, 848880, 395859}, {927020, 252345, 871160});
    Test_CheckProps_PlayerSplitsInfo("껠ﲜቚ⬋㫟슷崠ᕧ", "㸵죂砗죋穽⽍", {71220, 988735}, {234266, 142433, 163556, 735119}, {970606}, 35581, {545686, 109476, 224795}, {850420, 707776}, {515133, 973491}, {691035});
    Test_CheckProps_PlayerSplitsInfo("辅⭉ソ⿈", "蚕蔟Ι龲ꇗ", {997589, 581447}, {153623, 518141, 346182, 762934}, {585479}, 848405, {133172, 633088}, {823384, 399166, 149066}, {418900, 903157}, {489704, 500301, 23260, 809718});
    Test_CheckProps_PlayerSplitsInfo("攇뽿퉾돂", "⊳汧載ﵩ䡎ꋐﰸ⩱刞爆", {694416}, {550359, 706225, 871660, 228575}, {309649, 983400, 439297, 949203}, 850147, {694348, 646593, 698153}, {945184, 447526}, {608398, 764669, 302773}, {485202, 335576, 521868, 680498});
    Test_CheckProps_PlayerSplitsInfo("䵌‱䘢먔᫣", "귏毥᥃", {987805, 761692, 23189, 272553}, {812325}, {733567, 598243, 434223}, 350936, {143921}, {436748, 818681, 969575}, {422863, 684445, 952652, 357901}, {620249, 893367});
    Test_CheckProps_PlayerSplitsInfo("糣䱎쪓崉懮", "坊", {140197, 355531, 925363}, {180162, 165205, 404377}, {897441, 930210, 133511, 990522}, 720999, {}, {147555, 748571, 902045, 402357}, {677985}, {40648, 965014});
    Test_CheckProps_PlayerSplitsInfo("훃덙⋵隸꫍痈쎣", "绽ᅧ猣�嚖竝", {952563, 755458}, {650559, 575293}, {326415, 244877}, 528855, {684210}, {794190, 664873, 966601, 608736}, {974829}, {241345});
    Test_CheckProps_PlayerSplitsInfo("漾骞詻栞嶽衃鳱䊞", "榩", {717791, 656430}, {49619, 728517, 220917, 763780}, {517511, 710061, 300778, 96082}, 900088, {106890, 324005}, {684845, 142735, 594259, 123956}, {559594, 263376, 428969, 329998}, {463792});
    Test_CheckProps_PlayerSplitsInfo("炒", "㮜", {119300}, {642519}, {65331, 801047, 235155}, 583163, {679346, 926444, 84409, 237947}, {717690, 640427, 806092}, {489560, 915086}, {963535, 928835, 970757});
    Test_CheckProps_PlayerSplitsInfo("빗�厷ア炦勭疺", "ꂵ", {760754}, {46286, 484219}, {437881, 80069, 196783, 70608}, 957451, {630052}, {11919}, {763793, 583252, 988539, 329915}, {516520, 187953});
    Test_CheckProps_PlayerSplitsInfo("奨啈䂜絊앨⛳", "", {275704, 579821, 604829}, {958478}, {951090, 408024}, 629387, {549837}, {56493, 525441}, {44403, 881873, 82673, 751600}, {920512, 267481});
    Test_CheckProps_PlayerSplitsInfo("鯮㚰揉", "౤ᅺ鑪뿗뒔ട墳", {343715}, {836382, 945835}, {192879, 285333}, 999291, {439306, 395220, 5170, 542936}, {646611, 262313}, {868628, 257288, 803963, 240192}, {238728, 299496, 39143, 244744});
    Test_CheckProps_PlayerSplitsInfo("ꑆ个幚", "з", {676684}, {778262, 889541, 933285}, {681249, 454580, 976532}, 128288, {400651, 657129}, {556685}, {810229, 910563, 19455}, {843103, 74594, 186260});
    Test_CheckProps_PlayerSplitsInfo("浏඾繫䷩暻Эᳺ푰", "ｴ鼁", {237482, 422362, 561537}, {507512, 632204}, {955306, 36520}, 202414, {125245, 388691, 963810, 346080}, {929088, 716065}, {954060, 390755, 229264}, {88502});
    Test_CheckProps_PlayerSplitsInfo("", "⼝줠딳落", {961228, 34562, 692881}, {996815, 623797}, {795357}, 550737, {802021, 71779, 146269, 242168}, {595033, 850176, 127503, 813733}, {170971, 880971, 895695, 846078}, {526053, 598321});
    Test_CheckProps_PlayerSplitsInfo("ᾖ뚬淾沁켻䊜机껗", "", {926072, 948044}, {987325, 499359, 171027}, {881289, 355636, 833518}, 410924, {557852, 198832, 92965, 529932}, {175415, 237771}, {682815, 238565, 216093}, {743958, 212796});
    Test_CheckProps_PlayerSplitsInfo("", "䟧儷墽욤츙촐㲃朓紸", {934864, 344381, 872577, 316700}, {797806, 547396}, {609059, 39596}, 480955, {638305}, {17605, 235497}, {647747, 292558, 610985, 952904}, {239218});
    Test_CheckProps_PlayerSplitsInfo("隸蟅襎鿎⌯", "", {192100, 248619}, {156269, 843363, 968472}, {371733, 291632}, 904542, {224542, 883642, 859667, 914143}, {45409, 291255, 22511}, {60944, 336679}, {908342});
    Test_CheckProps_PlayerSplitsInfo("", "픻脍䣢", {567491}, {473488, 586115}, {504356}, 400694, {530210, 43591, 79186, 278055}, {130045, 981069, 314689, 28052}, {713956}, {155058, 241452});
    Test_CheckProps_PlayerSplitsInfo("屳", "묈䳖튞║ｷܫ䪡�", {583514, 130942}, {882101, 769082, 950331, 191}, {182052, 212056, 876763, 108523}, 209998, {308086, 36399}, {214250}, {648048, 373873}, {483076, 420662, 163447});
    Test_CheckProps_PlayerSplitsInfo("◫Ī ↥�獠罠", "蔥瘤հ", {315667, 984663, 85173, 88665}, {746986, 928807}, {766997, 426984, 100278}, 102098, {393001, 638707}, {119084, 29387, 302522}, {647034}, {34956, 613995, 482767, 127133});
    Test_CheckProps_PlayerSplitsInfo("㝲ࠩ᭵녱撅", "憧쀓", {802924, 615038}, {670703}, {895765, 19941}, 549076, {426363, 243411, 540733}, {73444, 68936, 518716, 60574}, {555939, 874871, 519644, 190362}, {674031, 362400});
    Test_CheckProps_PlayerSplitsInfo("櫬㶜⸉⁭䥉", "ꮅ螯ꢁ콧퀫", {548689, 516791, 191282}, {782099, 367419, 325561, 697943}, {302803, 503321, 641847}, 457328, {630210, 271418, 971136}, {614186, 469386}, {788000}, {996571});
    Test_CheckProps_PlayerSplitsInfo("훴", "偿紥ᩎ", {200159, 642390}, {224748, 936413, 263706}, {803672, 372801, 622606}, 396884, {684080, 561888, 778649, 753522}, {112138, 372917, 232901, 440754}, {732857, 657970}, {123053, 934737, 554310, 324463});
    Test_CheckProps_PlayerSplitsInfo("ﵥ⁥㦠ꣃ뛉椪ƫ镆", "끕蘆㉰춈", {37037, 9209, 540215}, {721285, 182479, 2630}, {213947}, 864904, {722458, 36494, 865735, 151001}, {340028}, {202957, 477762, 509571}, {});
    Test_CheckProps_PlayerSplitsInfo("伭긆䭆떞硞햅匿ল꼴", "", {475748}, {931443, 937428, 204396, 134855}, {950069, 942830}, 241230, {368793, 385268, 721455}, {798371, 135642}, {103591, 609392, 629139, 462149}, {273664, 494827, 22255});
    Test_CheckProps_PlayerSplitsInfo("벾㄄엲┄杮斱送", "耿ᨈ蒁Ʞ㙖㲶㙢", {686259}, {347109, 503584, 613080, 262291}, {532115, 869240, 979016}, 411861, {903837}, {734505}, {957812, 485225, 817370}, {341082, 419914, 720622, 716841});
    Test_CheckProps_PlayerSplitsInfo("ަᗱ⸡┎旺ഫ勺ݯ", "췮", {129909, 293743, 784379, 439910}, {228048, 748523}, {882374, 634995}, 506010, {914268, 632165}, {458079, 978008, 336553}, {194368, 985933}, {519477, 63900});
    Test_CheckProps_PlayerSplitsInfo("䮅扌訧鍬⻜", "", {433043, 844363, 831714, 889053}, {245364, 180682, 439723}, {489366, 366119, 776262, 808863}, 545506, {429511, 618572}, {652023, 163939, 719858, 666197}, {920174, 409061, 606889, 410979}, {838300, 96448, 967453});
    Test_CheckProps_PlayerSplitsInfo("嶝㟇", "䖉몖⮂♝젠", {217880, 231467, 54167, 558358}, {216094, 927392, 456734, 161390}, {737644, 960006, 897548}, 89871, {666869, 75986}, {243516, 14544}, {998215}, {27808, 871897, 667325, 292335});
    Test_CheckProps_PlayerSplitsInfo("", "㇙朾萑浢ᣙ陏帄", {172081, 62484, 711918}, {643072, 471315, 658693, 264368}, {188820, 763715, 55690, 554498}, 234988, {848829, 783329}, {307307, 349779}, {585295}, {42292});
    Test_CheckProps_PlayerSplitsInfo("㏏러", "㲭핀", {460842, 831613, 65936, 743803}, {150659, 997582}, {862152, 808693, 643626, 528052}, 253381, {902097, 524664, 104909}, {644681, 641966, 450009, 174949}, {891728, 568999}, {500065, 817330, 121967});
    Test_CheckProps_PlayerSplitsInfo("", "", {233631, 294328, 663760, 638773}, {773560, 335920, 32850}, {828246}, 817487, {45425, 346496, 703747}, {447560, 390973, 515012}, {995973, 901532, 900509}, {658571});
    Test_CheckProps_PlayerSplitsInfo("•㇓䖙叀긻⧞뚳", "꾈켽�芵", {939514, 564560}, {513855, 115025, 711278}, {677003}, 887636, {567721}, {843069, 46525, 265731, 380763}, {300359, 163792}, {109256, 604286, 529597});
    Test_CheckProps_PlayerSplitsInfo("", "暼େﻍ", {534292, 98643, 824434}, {69824, 330129}, {384138, 815476, 602832}, 260094, {180786, 906122}, {405402}, {330862, 531952}, {433103, 474703});
    Test_CheckProps_PlayerSplitsInfo("ኢ纡骋ᮍ♛", "ᤴ⑦辴ᅭᜢ䌠慹", {150950}, {517541}, {676131, 118685, 69358}, 17839, {748883, 298484, 136041}, {104943, 677737, 41745, 244588}, {978153, 628940, 730179}, {80829, 591780, 127435, 766464});
    Test_CheckProps_PlayerSplitsInfo("", "쓰蠸皁ꙻ쑴≻尺㝁ࡍ", {57089, 658617, 753240}, {132753, 18887, 262868, 479399}, {723955, 728149, 838456, 57061}, 826022, {710120, 677409, 109345, 852132}, {975471, 336239, 312956, 164378}, {126461, 473626, 576585}, {593609});
    Test_CheckProps_PlayerSplitsInfo("", "匟Ὧ煡湰", {548183, 147075, 716249, 11730}, {377294, 613775, 114022, 484295}, {317934, 832906}, 730875, {784328, 917780, 70746}, {560655, 944968, 480116, 303210}, {458846}, {71514});
  }
  
  bool unitTestResults_PlayerSplitsInfo_Getters = runAsync(Tests_RegisterAll_PlayerSplitsInfo_Getters);
  
  /* Test // Mixin: Op Eq */
  void Tests_RegisterAll_PlayerSplitsInfo_OpEq() {
    RegisterUnitTest('UnitTest_OpEqSimple_PlayerSplitsInfo', UnitTest_OpEqSimple_PlayerSplitsInfo);
  }
  
  PlayerSplitsInfo@ lastChecked = null;
  
  bool OpEqSimple_Check(const string &in Name, const string &in MapName, const uint[] &in PBTimes, const uint[] &in PBSplits, const uint[] &in BestSplits, uint SumOfBest, const uint[] &in NextBestTimes1, const uint[] &in NextBestTimes2, const uint[] &in NextBestTimes3, const uint[] &in NextBestTimes4) {
    PlayerSplitsInfo@ o1 = PlayerSplitsInfo(Name, MapName, PBTimes, PBSplits, BestSplits, SumOfBest, NextBestTimes1, NextBestTimes2, NextBestTimes3, NextBestTimes4);
    PlayerSplitsInfo@ o2 = PlayerSplitsInfo(Name, MapName, PBTimes, PBSplits, BestSplits, SumOfBest, NextBestTimes1, NextBestTimes2, NextBestTimes3, NextBestTimes4);
    assert(o1 == o2, 'OpEqSimple_Check fail for obj: ' + o1.ToString());
    assert(o1 != lastChecked, 'OpEqSimple_Check failed comparing to last obj');
    @lastChecked = o1;
    return true;
  }
  
  void UnitTest_OpEqSimple_PlayerSplitsInfo() {
    OpEqSimple_Check("欽᩻⫤䨣叒䝇", "춗䵩첏㞟", {310539, 803100, 499239, 860435}, {295268, 746965, 606964, 878215}, {500597, 684010, 999074, 214613}, 66438, {221991, 693970}, {366202, 903418, 511262}, {123640, 159512, 333816, 591080}, {60415, 776509});
    OpEqSimple_Check("怉嗣ᮌ曄ꚉ桀楫", "퐕썷ᯱꛞ쏒㚉뙶娜ᣟ", {131073}, {833738, 810716}, {785460, 26440}, 133463, {960171, 966222, 32507, 386748}, {288195, 117677, 392143}, {847881, 691948, 331952, 43208}, {316940, 504118});
    OpEqSimple_Check("я", "뮱佉蚵⧝耏", {300568, 435630, 704764}, {854015}, {174236}, 821821, {20188, 840953, 468715}, {658055}, {819364, 18103, 627814, 610006}, {97839, 524421, 221419, 455759});
    OpEqSimple_Check("尕놵묺쥷藹㴮ｃ⳺뚁", "䜧侉", {629572}, {785418}, {766369}, 453007, {106739}, {114882}, {153090}, {559404, 897339});
    OpEqSimple_Check("墐こ", "锲釹", {539265}, {457344, 298494}, {470200, 544378, 594524, 540196}, 38908, {438577, 997818, 6580}, {610372, 952676, 164360, 275713}, {716978, 984599, 671624, 853751}, {428886});
    OpEqSimple_Check("⏔銄ធ", "", {680607, 631334}, {527857}, {263165}, 470016, {177035, 884620, 501726}, {522160, 770199, 457029, 909926}, {445348, 590083, 854291}, {304399});
    OpEqSimple_Check("側똶뙈瓪ﲥ疬᳢", "", {213686}, {713773, 105608, 673623}, {897962, 511824, 929569}, 427331, {158662, 840971, 656856}, {39828, 183287, 960135, 783297}, {144576}, {753539});
    OpEqSimple_Check("�⺭é췍砟ᙵ굩", "덖", {356165, 554833, 370081, 131429}, {694240, 129575, 220644}, {759825, 578377}, 48706, {994850}, {}, {617826, 569423, 642478, 800263}, {776355, 112824, 877689});
    OpEqSimple_Check("䨾㶜☭ෳ鈴", "ͥ᣾킯䠧◐噙庈䶊撍", {341555, 410731, 880161, 179217}, {943082, 68111}, {354572}, 582502, {354108, 395321}, {964762, 586787, 404367, 560452}, {543714, 15728, 978412, 419116}, {6880, 884034});
    OpEqSimple_Check("૰", "旌佌糏ꕤ�", {610831, 463120, 421894}, {835211}, {305916, 798823}, 46866, {888785}, {493150, 323966, 423907, 574276}, {37271, 235839}, {756593, 971400, 518187, 607334});
    OpEqSimple_Check("믒趰忳쎓랔ꖒ鬋龕ຽҷ", "쬤﨣", {497191, 605167, 787386, 89486}, {263019}, {406777, 657020}, 369335, {703199, 1447}, {185297, 13596, 116782}, {796197, 836181, 56148, 80547}, {866437});
    OpEqSimple_Check("�瘣댮杣ඟ姡�럴", "媿餧윭ࢫꂘ", {629633}, {666256}, {}, 959191, {181762, 563843}, {331215, 696064, 926220}, {199578, 71737}, {375620, 625699});
    OpEqSimple_Check("", "縰㷇", {178912, 223235, 419277}, {299172, 946673, 553377}, {349916, 244123, 198145, 338233}, 560658, {455033}, {630084, 311873, 433952}, {800704, 37300, 573616}, {824660, 86998, 101815, 812180});
    OpEqSimple_Check("丮", "v⍱隊", {361374}, {469778}, {651960, 84333}, 562413, {183627, 733738}, {255600}, {496681, 640719}, {549628, 542692, 401557});
    OpEqSimple_Check("䅖ꏊ軃頴罩絟磶", "禾", {476823, 362536, 968715, 654100}, {480850, 571849, 598605, 986198}, {571410}, 302823, {109178, 406292}, {252171}, {957356, 47111, 24041, 443493}, {923046, 262372, 53250});
    OpEqSimple_Check("斍⏀쌛Ⓛ薚懙룙㎐꟡", "", {380025, 558349, 315764}, {258463, 109996, 486011, 515030}, {951957, 354149}, 385338, {942992}, {454708, 223824}, {40017, 56856, 935449, 975296}, {117262, 148794});
    OpEqSimple_Check("捐챵ꏹ꼡姐䊂⤭", "뱟땈ᛁ", {595630, 506976}, {44416, 674434}, {981280, 949731, 286904}, 424590, {837621, 696577, 941754}, {890950, 669898, 917233, 955059}, {951824, 353682}, {798238, 469245, 730255, 516222});
    OpEqSimple_Check("⼴逡痺䐤ⴢ摅캑ﴆ", "惢䘒�쪄", {102070, 602322, 346449}, {5427, 335875, 56189}, {343457, 525549, 490476, 132420}, 96163, {702681, 72590}, {629495}, {269383, 887256, 911530}, {795732, 453089, 140435, 243828});
    OpEqSimple_Check("챞䢿眭᫜", "", {464965}, {618239, 434225, 4480}, {183808, 501975}, 539534, {187265, 276945}, {568006, 400151}, {550126, 67959, 582402, 407489}, {762468, 975449, 967331});
    OpEqSimple_Check("倢豊ǌ皁꺼㲇߇", "㼅﬎梡깺⨎㢂", {201495}, {692957, 218550, 953245, 977605}, {92494, 611520, 364434, 41300}, 619517, {519643, 805620, 596394, 960369}, {21957, 987124, 440082, 536663}, {1109, 985961, 734995, 387569}, {463234, 144455, 904672, 718283});
    OpEqSimple_Check("遁ᘤ", "", {324633, 181377, 218100, 360974}, {891430, 450585}, {793431, 83712}, 918845, {58548, 953835}, {215597, 104954, 635474, 933997}, {374859, 995308}, {378856});
    OpEqSimple_Check("빂맴嗰荎觵緘顎ૢ", "꜓⵬㊇ᖕ⺸⣥꽈쐦㊓킑", {788433, 734911}, {708753, 582156, 965210, 878200}, {975752, 840058, 854275, 936371}, 937115, {771747, 174534}, {372746, 700462, 249949, 600996}, {508756}, {968142, 461071});
    OpEqSimple_Check("䌑ᕊ愑㫷ൈ�ぞᓺ핈", "ϑ᠟釿", {616953}, {310993}, {187048, 41134}, 735419, {717346, 387267}, {79375, 174588, 493899}, {651168, 327864, 382766, 913031}, {342734});
    OpEqSimple_Check("㏙伥╙灌띎噋ꌲ皒", "음垮�", {279708}, {272749, 781217, 665958}, {262452}, 458117, {400381, 698692, 950231, 2664}, {453659}, {803124, 504893, 154699}, {761889, 726525});
    OpEqSimple_Check("멕纍ⷒ艜᫮⪙", "怣", {89860}, {237347, 710152, 734449, 990860}, {169383, 415284, 979674, 886905}, 632735, {975698}, {481722, 730443, 260611, 453397}, {941312, 674568}, {58084, 467419, 896648});
    OpEqSimple_Check("攃ꃶࠋ", "煺霍ํ곖玀톔榉䳇ጃ", {699556, 597319}, {708329, 286107}, {576553, 745545, 649838, 190623}, 504590, {433054, 304429, 878556}, {138796}, {105575}, {302345});
    OpEqSimple_Check("㣶喒⅒瓮㫬", "劊좂響ض쭂槶ﾽ", {56177, 63284, 583486, 243612}, {15990, 55493, 919121, 318429}, {831481, 983930}, 180207, {441708, 382292, 639596, 730857}, {646633, 158297}, {787293}, {233465, 336965, 715890, 723929});
    OpEqSimple_Check("㻴驓ࣳ㣣咽玮棁༙㭮嗷", "晇巒쮭龥俩嬬≵疯", {257053, 288208}, {621029, 930243, 38788, 416137}, {59487, 188794, 265046}, 31576, {384502, 688227, 847615, 436429}, {594357, 185454, 516893, 896538}, {513362, 17652, 957251, 538187}, {560777, 762797, 409991, 172206});
    OpEqSimple_Check("䞃俯ꅧξ랇㲑�㹘捲", "믷γѦ㙉ﰵ鹖氫�᧬쓔", {983090, 169558}, {378434}, {197788, 829453, 77710}, 855074, {87934, 245452, 805078, 180939}, {520926, 574364, 837186}, {428768, 92758}, {763559, 65901, 257623});
    OpEqSimple_Check("틍", "႒鐽⍒싊딯", {578298}, {417823, 123157}, {646408, 402785, 524957}, 316615, {960593, 667186, 775935}, {622874, 65485}, {884959, 28854, 764739, 177327}, {729518, 533064, 685121, 928239});
    OpEqSimple_Check("⫰䈬퐌쮧㏡륳덏꽠", "�", {810750, 939420}, {76141, 743061}, {597449, 764358, 423482, 833220}, 422588, {159456}, {885993, 967547}, {981241, 386906, 814048, 285003}, {660221, 880535});
    OpEqSimple_Check("ᣪ儺덥胹苢ꆟ栈詠彨", "", {427989}, {187315, 436916, 699724}, {85087, 62646, 38388}, 412341, {273559, 183472}, {43019, 88301, 777220, 67975}, {819045}, {981507, 322016, 77271});
    OpEqSimple_Check("〪散қșചᅉ寬뭛ɩ翚", "袯⯇ﶤ끗각", {137666}, {167360, 948505, 392110}, {737538, 625526}, 588542, {178875}, {983582, 547714, 249795}, {688516, 192131, 454006, 645777}, {192987});
    OpEqSimple_Check("핦炀ㅪ偣儙⊣繽゠", "奇进됭䆸ꇵ㳃턇", {417007, 463075}, {453559, 727740, 909617, 817347}, {436848, 800825, 70441, 961271}, 828828, {274966, 521616, 433506, 254905}, {798513}, {177339, 833648}, {286536, 588408, 472737, 258559});
    OpEqSimple_Check("䰆", "㭊ᐠ픲䖆", {358869, 218903, 719137}, {396963}, {282697}, 307062, {489980, 614494, 196605, 164678}, {183023, 795233}, {516355, 571704, 739871}, {744270, 720915, 475815});
    OpEqSimple_Check("嘩﷜ᬁ狿昫", "", {39657}, {8704, 85079, 322820}, {649254, 469561, 87802}, 156001, {529427, 863609, 373878}, {987302, 860238, 302337, 425670}, {407728}, {86434, 939115});
    OpEqSimple_Check("욌尽⪬ꇱ椳轣", "篏ꃸ㗛擱", {577159}, {919770, 652191, 350915}, {658570, 767524}, 857619, {767476, 386817, 997605, 965323}, {638894}, {711342, 702387}, {155983, 927919});
    OpEqSimple_Check("濫戝", "ᙥ줊ꄻ뉒例鰘덆", {531978, 455186}, {710678, 687338, 37279, 785062}, {428318, 179358, 153963, 445771}, 11865, {317263, 159332}, {714415, 848642, 796834}, {901513, 79117, 967007, 235102}, {466142, 384585, 627110});
    OpEqSimple_Check("馻筺䆈ᚬ攔ﮣﱔ抃໊", "䇃", {745747, 251523, 973081, 725554}, {608387}, {976693, 522299, 40055}, 90850, {728432, 222819, 5641}, {246916}, {981746, 400639}, {113775, 440191, 884321});
    OpEqSimple_Check("▴퀷ሱ", "ሄ˒鮻ㄏ˂", {500929, 129422}, {88920, 351053}, {197291, 768783, 315627}, 210643, {763460, 571516, 166674}, {610668}, {755395, 170567, 379645, 430931}, {896142});
    OpEqSimple_Check("븀⹀휤ꪅ醨쵗诱", "〭六", {607928, 745947}, {855547}, {234342, 172078, 485374, 395089}, 864464, {719586, 388640}, {922608, 970231}, {217832, 680960, 598831}, {736502, 604987, 993106, 324404});
    OpEqSimple_Check("驿㘸�删", "陞", {317775, 923522, 311921}, {636650, 76743, 417070}, {808215}, 301896, {392021, 365249, 209157, 73703}, {108979, 86254, 381679, 513764}, {517406, 762358, 192766, 617217}, {828388, 365463, 898002, 661218});
  }
  
  bool unitTestResults_PlayerSplitsInfo_OpEq = runAsync(Tests_RegisterAll_PlayerSplitsInfo_OpEq);
  
  /* Test // Mixin: ToFromBuffer */
  void Tests_RegisterAll_PlayerSplitsInfo_ToFromBuffer() {
    RegisterUnitTest('UnitTest_ToFromBuffer_PlayerSplitsInfo', UnitTest_ToFromBuffer_PlayerSplitsInfo);
  }
  
  bool Test_ToFromBuffer_Check(const string &in Name, const string &in MapName, const uint[] &in PBTimes, const uint[] &in PBSplits, const uint[] &in BestSplits, uint SumOfBest, const uint[] &in NextBestTimes1, const uint[] &in NextBestTimes2, const uint[] &in NextBestTimes3, const uint[] &in NextBestTimes4) {
    PlayerSplitsInfo@ tmp = PlayerSplitsInfo(Name, MapName, PBTimes, PBSplits, BestSplits, SumOfBest, NextBestTimes1, NextBestTimes2, NextBestTimes3, NextBestTimes4);
    Buffer@ buf = Buffer();
    tmp.WriteToBuffer(buf);
    buf.Seek(0, 0);
    assert(tmp == _PlayerSplitsInfo::ReadFromBuffer(buf), 'ToFromBuffer fail: ' + tmp.ToString());
    return true;
  }
  
  void UnitTest_ToFromBuffer_PlayerSplitsInfo() {
    Test_ToFromBuffer_Check("❬盽በ�", "ᦞ壩괛�㸝赳粢ോ银浕", {439826, 429952, 950898, 946504}, {28292, 275544}, {150495, 995865, 201236, 114032}, 239060, {395229, 860777, 195527, 16729}, {514374}, {305150}, {566341});
    Test_ToFromBuffer_Check("䤗ᅾ읡羅ꌉ⦿䫏찣䄺㔼", "", {1464, 156703, 549906}, {167614, 447451, 286481}, {215149, 500830, 373413}, 949599, {959434, 907612, 769890}, {612549, 668089, 177034}, {204887, 913879, 352464}, {871047, 711944, 273215, 956474});
    Test_ToFromBuffer_Check("婗�嗇웖峔䞠", "늴㐆醁递㦊", {222696, 489658, 431478}, {688420}, {25517, 246866, 592914, 843770}, 440490, {305848}, {124573, 219369, 744839}, {319227, 520261, 610901, 330939}, {740025, 18020, 786088, 525529});
    Test_ToFromBuffer_Check("峽ᱪ", "싔", {395190, 873537}, {831712, 126210, 981602, 432248}, {217232, 459935, 740264, 691552}, 841908, {316705, 790967, 709915}, {611847, 236913}, {870661}, {153581, 692075, 79569});
    Test_ToFromBuffer_Check("㫴ݲ", "聊䣯", {901057, 336023}, {764515}, {494885, 451658}, 205541, {674685, 385463, 960991}, {145360, 908104, 855579, 27378}, {473825}, {811015, 325523});
    Test_ToFromBuffer_Check("梱쒰ᘤ�6", "㢋뵈곋衫�鐭", {491002}, {633860}, {712180, 173894, 919387}, 745376, {839313, 659626, 424265, 162188}, {887898, 112853}, {386132, 911184}, {786352, 319491});
    Test_ToFromBuffer_Check("蓞椆욛⪺嶷艒玧", "魤ǫ䏆", {150848, 45902, 263404}, {638173, 465852, 773115}, {462917, 871793, 116523}, 830116, {438882, 328793}, {347448, 528004}, {137795, 739553}, {449880, 571741});
    Test_ToFromBuffer_Check("誸暭妾", "헧ᜰ︺ꮛⳲ", {715606}, {714903, 949124}, {998119, 681555}, 932286, {542163, 499804, 816724, 194583}, {957219}, {362603, 508488, 858389}, {112592});
    Test_ToFromBuffer_Check("侇", "玶暤", {767735, 468334, 938354}, {874256, 198104, 18330}, {329669, 27876, 263867, 138879}, 911031, {319194, 525121}, {192698, 699561, 784760, 438625}, {100513}, {783860, 374592, 70629});
    Test_ToFromBuffer_Check("쌭㧮琭⮜뎬", "莇ᇾ", {239575, 589319}, {612062}, {560058, 649787}, 460247, {5605}, {966694, 117297, 841223, 461453}, {698702, 385826}, {849299});
    Test_ToFromBuffer_Check("䐭ǘ钶옠挏䆭䐜�", "᪾ꬣ鶑煮쨣雜蒘痃隔", {948758}, {611797}, {573793, 959969, 893817, 131048}, 691255, {570569, 490055, 647385}, {966930, 434672, 109814}, {591520, 133548, 95318}, {95984});
    Test_ToFromBuffer_Check("爕ᡟﭖ䝜ˎ邨Ɉ失", "䝜睯뽡ᤇꮕ녛ﮝ။⺢", {220776}, {68188}, {559458}, 580200, {928539, 796111, 843559}, {615343, 95161, 825340}, {437206, 937372, 733018}, {301561, 585416});
    Test_ToFromBuffer_Check("귋룄踂뷡焱．㿾괫", "鍍�ᗈ勡퇻", {876686, 841586, 336630, 877923}, {816054, 577567, 68545}, {973141}, 46789, {82437, 679471, 454262, 940477}, {243645, 410160}, {898463, 611448, 66949, 250450}, {909425});
    Test_ToFromBuffer_Check("ㅜ墤혬ﱥꪒ�캑", "閵养ѓ폣", {396182, 730341}, {899767}, {666157, 801423, 842891}, 334018, {377087, 691820, 291140}, {69361, 155255}, {366031, 554590}, {334089, 970339});
    Test_ToFromBuffer_Check("⬼检ﾉ雗", "퍣즛렒♢㥩꯵ऩ滑柅", {25808, 157680, 591704}, {772337}, {468750, 662332}, 695107, {817179, 821574, 816568, 391964}, {975925, 904311}, {883907}, {792579, 221078, 111490});
    Test_ToFromBuffer_Check("鴯韁", "괟㩷盽졐᪑뾮㡨놚ₙ", {102543}, {264102}, {412542, 480466}, 189119, {702561, 71901, 331373, 263009}, {284769, 211454, 796157, 464534}, {697258, 986065, 145369, 469100}, {526507, 271700, 366280, 408359});
    Test_ToFromBuffer_Check("쇪篬꠽㑂劲흱Ʀ", "", {726921}, {94192, 618060, 171714}, {254399, 474825, 70104}, 251865, {896637, 965723, 152615}, {651695, 283639}, {937377, 951819}, {663146, 387311, 481410, 25050});
    Test_ToFromBuffer_Check("㼫", "㳵唵Ἐ痪", {464905}, {525236}, {127899, 58758, 997307, 806703}, 965560, {567254}, {358198, 45130}, {983556}, {187299, 903812, 536359, 290236});
    Test_ToFromBuffer_Check("갧鯄ⶢ", "棄ꧠ裐㒤뱗�", {354557}, {505308}, {878956, 774157}, 389123, {528211}, {444205, 455328}, {226507, 962384, 879313, 471004}, {495532, 292216, 311068, 817214});
    Test_ToFromBuffer_Check("핻´왨�嶣ꍿꂋ�ꭎ", "", {181266}, {346851, 662823, 367212, 566749}, {778627}, 260848, {192473, 477899}, {346293, 429421, 810051}, {383035, 257516, 982759}, {669346, 991738});
    Test_ToFromBuffer_Check("叁ౕ䟎ⶤ이靁", "ઓ௚殞׮Ἓ獐", {940109}, {653553, 637633, 718012, 94872}, {657970}, 594602, {687126, 246194, 584196, 805667}, {758595, 946793}, {655924, 415219, 150886}, {99864, 987338, 710673, 41687});
    Test_ToFromBuffer_Check("㬬良", "㸀苕ﶓ", {42429, 1420, 622825}, {967581, 102504, 515385, 360197}, {284440, 717823}, 332380, {814924, 421771, 345438}, {883758, 718838, 542573, 558095}, {622817}, {452123, 209246, 978839, 589429});
    Test_ToFromBuffer_Check("絠믤䰎", "嬻枫缴恕杛Ќⵈ藣䊆", {690096}, {808683, 267306, 622358, 634415}, {854734, 568217}, 269419, {493148, 685938}, {133864, 885697, 754064}, {800525, 44099, 40567, 484948}, {52858, 441830, 758456, 557442});
    Test_ToFromBuffer_Check("㑊", "嗰ꖈ볉葎咍", {452199, 466950, 196402}, {687930, 884721, 55420}, {413692, 313988}, 293499, {125762, 88239, 570322, 257426}, {741864}, {479167, 318580}, {617274, 177309, 232537});
    Test_ToFromBuffer_Check("ִಚ㍥啷", "�烙ᜧ怖", {571762, 940878, 839513, 984792}, {16527, 839453, 333585, 413761}, {428230, 636388, 293443, 299932}, 688823, {833142, 194349}, {941903, 57987, 363898}, {392457, 628416, 632130, 155869}, {448462, 397734, 961055});
    Test_ToFromBuffer_Check("챤", "푓罂", {146837, 808930}, {576497}, {161551}, 157026, {765969, 368701, 430299, 949688}, {758099, 671757, 520514, 414569}, {15998, 540885, 946705, 904632}, {333868});
    Test_ToFromBuffer_Check("㺢ኼᡑጞ몹ﴸ", "Ɔ�ᕉ띤", {780689, 394330}, {661993, 824362, 290831, 453607}, {558699, 381650, 689423}, 912061, {820508, 923362}, {329168}, {561195}, {380559, 999663, 157099});
    Test_ToFromBuffer_Check("覠訐셺⊔崎", "諯캓", {81400, 282066}, {191245, 978110, 434773, 901397}, {395600, 362921}, 959846, {672924}, {964930, 185778}, {235708, 895244, 236044}, {106124, 859114, 582690, 166377});
    Test_ToFromBuffer_Check("昘㰻ᓈ⻂", "ꎦ띜˅", {802097, 970490, 738104}, {220303, 505820}, {41336, 818384, 672087, 522154}, 998219, {177544, 216714, 524559}, {403343, 733076}, {348625}, {615320, 433708, 624639});
    Test_ToFromBuffer_Check("ၧ焁愺䊱㦝엾ꬤ䦯", "ἐ￲", {834280}, {607513, 671130}, {966773, 926599, 102900, 549073}, 639112, {544499, 769831, 941305, 240146}, {743276, 819250, 584192, 983987}, {945321, 376487}, {532333, 177996, 463926, 198175});
    Test_ToFromBuffer_Check("⤥䱋", "轈鐭賡韦", {862536}, {816633, 906790, 450855, 716078}, {646306, 960904, 92873, 2054}, 443077, {840653, 68362}, {743796, 474835, 167049, 85579}, {532939, 379227, 89803}, {853655, 907435, 117295});
    Test_ToFromBuffer_Check("桵镎ꣀ⃜⻓ʅ", "", {588910, 611040, 609208, 696762}, {395515, 498539, 213452, 951666}, {439097, 527202}, 669419, {688994, 911097, 405562, 75109}, {594400, 708613, 239194}, {360325, 491466}, {389833, 154883, 294264, 25444});
    Test_ToFromBuffer_Check("荰", "捡씺Ḧ�倰택裱", {242064, 131972, 511745, 967674}, {870966, 850417, 316181, 325711}, {332563, 726045, 91183, 571575}, 313990, {978219, 162195, 346396}, {399064}, {288661, 712334, 698566, 266849}, {325060, 658911});
    Test_ToFromBuffer_Check("뿓僐⁍≪힕᮫墆桝憉垤", "穟˩䌖莜⹚", {62232, 654957}, {384577}, {709757, 122549, 804127, 444591}, 630556, {586870}, {18765}, {732288, 877060, 349487, 494312}, {410982, 808912});
    Test_ToFromBuffer_Check("䘎䚳榚﫨掗폌㛱ኹ", "紆宣ᖴ꼲", {334674, 420865, 411218, 797605}, {99980}, {149436, 903304, 95956, 167455}, 410441, {796876}, {701214, 418505, 342851}, {689281, 402045, 744774, 56905}, {91596, 876186, 826672, 163538});
    Test_ToFromBuffer_Check("ឭ늸ᅿ᪹ⷲန", "쟖♘撚遦", {440705}, {653487, 119182}, {945725}, 692162, {708164}, {171715, 704173, 836726, 828804}, {970593, 814012, 449926}, {508453, 889860});
    Test_ToFromBuffer_Check("�ꙏ曩⑔덤愫䴗♂", "㉭퀄䴛", {760974, 727039, 85520}, {68954, 940541, 775143, 567762}, {301789, 786647, 449975, 853460}, 401528, {757392, 251775, 620462, 718180}, {222930, 405123, 87666, 913899}, {511862, 759249, 304608, 796939}, {292540, 865912, 918350});
    Test_ToFromBuffer_Check("㐌뚱죄욅껔㖇", "㮬�℁ﲞ훛嶼", {148380, 845092, 62272, 262372}, {818872}, {910352, 622285, 773270}, 553115, {30783, 129353, 535568, 889291}, {398172, 706022}, {617938}, {971825});
    Test_ToFromBuffer_Check("鈏큹쑅きㅜ", "", {523398, 679308, 762195, 672690}, {478958}, {872647, 808732, 462833, 979160}, 484351, {89872, 46357}, {565946, 219686}, {766088}, {532459, 969409});
    Test_ToFromBuffer_Check("胩䵖�逍몢", "桡킭", {776481, 678703, 842882}, {72845, 615719, 771664}, {724538, 196445}, 695214, {710962, 626722, 982164, 504108}, {566201, 559928, 936358}, {181795, 821899, 68995, 2626}, {72532});
    Test_ToFromBuffer_Check("㻊둅皦䱮呉濅䥠ᮜ", "姽ᫍ욀瀙궁", {430835, 302684, 879857}, {877219, 764160, 809560, 674874}, {114280, 463309, 790672}, 954101, {39255, 698697, 252729, 696311}, {905473, 633529, 216502, 477940}, {358706, 217517, 448838, 833038}, {787864});
    Test_ToFromBuffer_Check("逦ᠯ", "ﯔ鹕﯆", {458799, 479746, 337302}, {369806}, {426377, 939031}, 371284, {465499, 745398, 27071}, {549243, 537692, 466080}, {813790, 783123, 141514, 192941}, {911236, 366863, 169187});
  }
  
  bool unitTestResults_PlayerSplitsInfo_ToFromBuffer = runAsync(Tests_RegisterAll_PlayerSplitsInfo_ToFromBuffer);
}
#endif